# This is a basic workflow that is manually triggered

name: testRigor

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
    branches: [ main]
  # workflow dispatch
  workflow_dispatch:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Run a multi-line script
      run: | 
        curl -X POST \
          -H 'Content-type: application/json' \
          -H 'auth-token: d32b63f7-22dd-4516-afa8-3e73bf0029ce' \
          --data '{"forceCancelPreviousTesting":true,"storedValues":{"storedValueName1":"Value"}}' \
          https://api.testrigor.com/api/v1/apps/9F4MsijaR8fNxTQhR/retest

        sleep 10

        while true
        do
          echo " "
          echo "==================================="
          echo " Checking TestRigor retest"
          echo "==================================="
          response=$(curl -i -o - -s -X GET 'https://api.testrigor.com/api/v1/apps/9F4MsijaR8fNxTQhR/status' -H 'auth-token: d32b63f7-22dd-4516-afa8-3e73bf0029ce' -H 'Accept: application/json')
          code=$(echo "$response" | grep HTTP |  awk '{print $2}')
          body=$(echo "$response" | grep status)
          echo "Status code: " $code
          echo "Response: " $body
          case $code in
            4*|5*)
              # 400 or 500 errors
              echo "Error calling API"
              exit 1
              ;;
            200)
              # 200: successfully finished
              echo "Test finished successfully"
              exit 0
              ;;
            227|228)
              # 227: New - 228: In progress
              echo "Test is not finished yet"
              ;;
            230)
              # 230: Failed
              echo "Test finished but failed"
              exit 1
              ;;
            *)
              echo "Unknown status"
              exit 1
            esac
          sleep 10
        done
